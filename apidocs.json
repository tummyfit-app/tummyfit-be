{
  "openapi": "3.0.3",
  "info": {
    "title": "Tummyfit Documentation ",
    "version": "1.1.0",
    "description": "**Tummyfit** merupakan sebuah applikasi berbasis mobile yang berfokus untuk membantu para pengguna merancang diet serta mengatur pola hidup yang lebih sehat. Aplikasi ini didirakan sebagai rancangan dasar untuk Capstone [Bangkit Academy 2023 By Google, GoTo, Traveloka](https://grow.google/intl/id_id/bangkit/) . Team pada Tummyfit ini beranggotakan 6 orang yaitu: <br> <br> **1. Nashuha Insani(ML) <br> 2. Salman Yusuf(CC) <br> 3. Muhammad Rafly Afrizal Pratama(CC) <br> 4. Adib Fahri Kafabih(MD) <br> 5. Ridho Gymnastiar Al Rasyid(MD) <br> 6. Ainun Syafna Maharani(ML)** ",
    "contact": {
      "email": "c375dsx0630@bangkit.academy"
    }
  },

  "servers": [
    {
      "url": "https://express-ts-production-f6c5.up.railway.app",
      "description": "Deployment-1"
    },
    {
      "url": "http://localhost:5000",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Endpoint mengenai Autentifikasi(Login & Register)"
    },
    {
      "name": "User",
      "description": "Endpoint mengenai user dan user description"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Melakukan Registrasi User",
        "description": "Endpoint ini ditujukan untuk melakukan registrasi user dengan memasukan payload berupa: **[Email, Username, Password, Namauser]**. Tentu saja password yang dimasukan tidak langsung dikembalikan, melainkan server melakukan enkripsi terlebih dahulu, agar password aman.",
        "operationId": "addUser",
        "requestBody": {
          "description": "Payload **wajib** berisikan **Email, Username, Password, dan Namauser**. Lihat contoh value dibawah ini: ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response sukses ketika semua validasi payload terkonfirmasi dan berhasil membuat user baru.  "
          },
          "400": {
            "description": "Terdapat kesalahan pada payload yang dimasukan, pastikan bahwa kamu sudah memasukan payload dengan benar."
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Melakukan login user",
        "description": "User yang telah melakukan registrasi, dapat melakukan login pada endpoint ini, dan akan mengambalikan sebuah **token**",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User harus memasukan payload berupa **username** dan **password** yang telah didaftarkan sebelumnya",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Response Sukses**.<br> Kondisi ini terjadi ketika user berhasil memasukan username dan password yang sesuai, sehingga server akan mengambalikan sebuah **token** untuk autentifikasi"
          },
          "400": {
            "description": "**Response Gagal**.<br> Terdapat kesalahan pada payload yang dimasukan oleh user, seperti username atau password yang salah."
          },
          "500": {
            "description": "**Internal Server Error**.<br> Terjadi kesalahan pada server, sehingga client atau user tidak bisa mengakses endpoint atau url milik tummyfit"
          }
        }
      }
    },
    "/api/auth": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Melakukan update data profile user",
        "description": "Endpoint ini digunakan untuk melakukan melakukan update pada spesifik data profile user. User bebas mengupdate data mana yang mau diubah, seperti username, password, email ataupun nama user",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User boleh memasukan salah satu dari data profile yang ingin diupdate. Pada contoh dibawah, data yang akan diupdate adalah username.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Response Sukses**. <br> User berhasil melakukan update pada data"
          },
          "204": {
            "description": "**Response Sukses**. <br> Tidak ada data yang dirubah oleh user"
          },

          "401": {
            "description": "**Response Gagal**. <br> Tidak ada nya autorisasi atau token yang disisipkan."
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "patch": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["User"],
        "summary": "Melakukan update pada deskripsi user",
        "description": "Endpoint ini bertujuan untuk melakukan update kepada deskripsi user. Tidak hanya itu, terdapat **id dari deskripsi user** juga yang digunakan sebagai parameter untuk melakukan querying spesifik ke deskripsi user nya.",
        "operationId": "updateDesc",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Response Sukses.** <br> Pengguna berhasil melakukan update terhadap deskripsi miliknya."
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["User"],
        "summary": "Mendapatkan spesifik data user & deskripsi miliknya",
        "description": "Endpoint ini bertujuan untuk mendapatkan hasil deskripsi user yang spesifik. User tersebut sudah harus melakukan login terlebih dahulu sehingga memiliki token yang sesuai dengan yang di mau.",
        "operationId": "getUserDesc",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "**Response Sukses**. <br> Berhasil mendapatkan data user tertentu serta deskripsi nya "
          },
          "401": {
            "description": "**Response Gagal**. <br> Tidak ada nya token yang ditaruh pada Header, sehingga muncul error ini"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Membuat user description untuk spesifik user(user yang telah melakukan authorisasi)",
        "description": "Endpoint ini digunakan untuk membuat user description, dimana user description yang dimasukan akan menjadi milik user yang telah melakukan autorisasi",
        "operationId": "insertUserDesc",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDescription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**Response Sukses**. <br> Deskripsi dari user berhasil dibuat."
          },
          "400": {
            "description": "**Response Gagal**. <br> Terjadi kesalahan pada payload yang dimasukan. Pastikan kembali payload yang dimasukan sudah benar"
          },
          "401": {
            "description": "**Response Gagal**. <br> Tidak ada nya autorisasi atau token yang disisipkan."
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Silahkan masukan token, **tidak perlu** mengawali nya dengan `Bearer` <br> prefix, e.g. \"abcde12345\"."
      }
    },

    "schemas": {
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "aku_ganteng"
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "namauser": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "string@gmail.com"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserDescription": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "example": "input date format(YYYY-MM-DD)"
          },
          "height": {
            "type": "number",
            "example": 170
          },
          "weight": {
            "type": "number",
            "example": 68
          },
          "sex": {
            "type": "string",
            "example": "male/female(choose one)"
          },
          "gluten_free": {
            "type": "string",
            "example": "yes/no(choose one)"
          },
          "dairy_free": {
            "type": "string",
            "example": "yes/no(choose one)"
          },
          "vegan": {
            "type": "string",
            "example": "yes/no(choose one)"
          },
          "vegetarian": {
            "type": "string",
            "example": "yes/no(choose one)"
          },
          "alcohol": {
            "type": "string",
            "example": "yes/no(choose one)"
          },
          "daily_activity": {
            "type": "string",
            "example": "working"
          },
          "purpose": {
            "type": "string",
            "example": "diet"
          }
        }
      },
      "DescUpdate": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "example": 70
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}
